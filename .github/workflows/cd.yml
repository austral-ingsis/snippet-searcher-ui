name: Docker Release (CD)

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add Env Vars
        env:
          AUTH0_SECRET: ${{ secrets.AUTH0_SECRET }}
          AUTH0_BASE_URL: ${{ secrets.AUTH0_BASE_URL }}
          AUTH0_ISSUER_BASE_URL: ${{ secrets.AUTH0_ISSUER_BASE_URL }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
          NEXT_PUBLIC_API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
        run: |
          cat <<EOT >> .env
          AUTH0_SECRET=${AUTH0_SECRET}
          AUTH0_BASE_URL=${AUTH0_BASE_URL}
          AUTH0_ISSUER_BASE_URL=${AUTH0_ISSUER_BASE_URL}
          AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
          AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
          API_ENDPOINT=${API_ENDPOINT}
          NEXT_PUBLIC_API_ENDPOINT=${NEXT_PUBLIC_API_ENDPOINT}
          EOT   
          
      - name: Common SnippetSearcher Actions
        uses: Snippet-Searcher/actions@main
        with:
          context: .
          name: ${{ github.repository }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

#  deploy:
#    name: Deploy to Prod
#    needs: build-and-publish
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Use Azure VM Connection Action
#        uses: Snippet-Searcher/actions@deploy
#        with:
#          action-file: deploy.yml
#          ip: ${{ secrets.VM_IP }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}